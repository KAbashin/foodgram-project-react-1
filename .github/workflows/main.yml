name: Django-app workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install -r ./backend/requirements.txt 

    - name: Test with flake8 and django tests
      run: |
        cd backend/
        python -m flake8

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub Backend
        uses: docker/build-push-action@v2
        with:
          push: true
          context: backend/
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
      - name: Push to Docker Hub Frontend
        uses: docker/build-push-action@v2
        with:
          push: true
          context: frontend/
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest
#  copy_infra_to_server:
#    name: Copy docker-compose.yml and nginx.conf
#    runs-on: ubuntu-latest
#    needs: tests
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Create projects directory
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.HOST_IP }}
#        username: ${{ secrets.HOST_USER }}
#        key: ${{ secrets.SSH_KEY }}
#        script: |
#          rm -rf foodgram/
#          mkdir -p foodgram/

#    - name: Copy files
#      uses: garygrossgarten/github-action-scp@release
#      with:
#          local: infra/
#          remote: /home/${{ secrets.HOST_USER }}/foodgram/
#          host: ${{ secrets.HOST_IP }}
#          username: ${{ secrets.HOST_USER }}
#          privateKey: ${{ secrets.SSH_KEY }}

#  build_push_backend_to_DockerHub:
#    name: Push Docker image to Docker Hub
#    runs-on: ubuntu-latest
#    needs: tests
#    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
#    steps:
#      - name: Check out the repo
#        # Проверка доступности репозитория Docker Hub для workflow
#        uses: actions/checkout@v2
#      - name: Set up Docker Buildx
#        # Вызов сборщика контейнеров docker
#        uses: docker/setup-buildx-action@v1
#      - name: Login to Docker
#        # Запуск скрипта авторизации на Docker Hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#      - name: Push "foodgram/backend" to DockerHub
#        # Пуш образа в Docker Hub
#        uses: docker/build-push-action@v2
#        with:
##          context: ./backend
##          file: ./backend/Dockerfile
#          context: backend/
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

#  build_push_frontend_to_DockerHub:
#    name: Building front image and pushing it to Docker Hub
#    runs-on: ubuntu-20.04
#    needs: tests
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Login to Docker
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Push "foodgram/frontend" to DockerHub
#        uses: docker/build-push-action@v2
#        with:
#          context: frontend/
#          push: true
#          tags: ${{ secrets.DOCKER_USER }}/foodgram_frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd foodgram/
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_backend
          sudo docker-compose stop
          sudo docker-compose rm foodgram_backend
          sudo docker-compose rm foodgram_frontend
          > .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          sudo docker-compose up -d
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} Деплой Foodgram успешно выполнен!
